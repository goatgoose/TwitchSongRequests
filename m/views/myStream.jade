//
   Created by goatgoose on 12/30/15.

html
    head
        title=title
        meta( charset='utf-8' )
        meta( http-equiv='X-UA-Compatible', content='IE=edge' )
        meta( name='viewport', content='width=device-width, initial-scale=1.0' )
        meta( name='description', content='Baking Bootstrap Snippets with Jade' )
        link(href="//maxcdn.bootstrapcdn.com/bootswatch/3.3.6/flatly/bootstrap.min.css", rel="stylesheet")
    body

        script( src='//ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js' )
        script( src='//maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js' )

        - var playlist = JSON.parse(playlistCache);

        script.
            var currentPreview;

            var positionFromIndex = {}; // index : position
            var indexFromPosition = {}; // position : index

            var switchPositions = function(baseIndex, offset) {
                var basePosition = positionFromIndex[baseIndex];
                var swapPosition = basePosition + offset;
                var swapIndex = indexFromPosition[swapPosition];

                var basePanel = $("#panel" + baseIndex);
                var swapPanel = $("#panel" + swapIndex);

                if (offset < 0) {
                    basePanel.insertBefore(swapPanel);
                } else {
                    swapPanel.insertBefore(basePanel);
                }

                // update new positions
                positionFromIndex[baseIndex] = swapPosition;
                positionFromIndex[swapIndex] = basePosition;
                indexFromPosition[basePosition] = swapIndex;
                indexFromPosition[swapPosition] = baseIndex;

                // console.log("positionFromIndex = " + JSON.stringify(positionFromIndex));
                // console.log("indexFromPosition = " + JSON.stringify(indexFromPosition));
            }

            var previewAction = function(index) {
                // hide preview at current index
                if (currentPreview != null) {
                    document.getElementById("hide-preview-button" + currentPreview.toString()).style.display = "none";
                    document.getElementById("preview-panel" + currentPreview.toString()).style.display = "none";
                }

                // show preview at new index
                document.getElementById("hide-preview-button" + index.toString()).style.display = "block";
                document.getElementById("preview-panel" + index.toString()).style.display = "block";
                currentPreview = index;
            }

            var moveDownAction = function(index) {
                console.log("moveDownButtonAction" + index.toString());
            }

            var moveUpAction = function(index) {
                console.log("moveUpButtonAction" + index.toString());

                switchPositions(index, -1);
            }

            var deleteAction = function(deleteIndex) {
                document.getElementById("panel" + deleteIndex.toString()).remove();

                var deletePosition = positionFromIndex[deleteIndex];

                var newPositionFromIndex = {}; // index : position   1:2, (2:3), 3:1, 4:4 - 1:2, 3:1, 4:3
                var newIndexFromPosition = {}; // position: index    1:3, 2:1, (3:2), 4:4 - 1:3, 2:1, 3:4

                var i = 0;
                for (position in positionFromIndex) {
                    if (position != deletePosition) {
                        i = i + 1;
                        if (position < deletePosition) {
                            newPositionFromIndex[indexFromPosition[i]] = i;
                            newIndexFromPosition[i] = indexFromPosition[i];
                        } else {
                            newPositionFromIndex[indexFromPosition[i + 1]] = i;
                            newIndexFromPosition[i] = indexFromPosition[i + 1];
                        }
                    }
                }

                positionFromIndex = newPositionFromIndex;
                indexFromPosition = newIndexFromPosition;

                // console.log("positionFromIndex = " + JSON.stringify(positionFromIndex));
                // console.log("indexFromPosition = " + JSON.stringify(indexFromPosition));
            }

            var hidePreviewAction = function(index) {
                document.getElementById("hide-preview-button" + index.toString()).style.display = "none";
                document.getElementById("preview-panel" + index.toString()).style.display = "none";
                currentPreview = index;
            }

            var renderLink = function(url, insertAtIndex) {


            }
        nav.navbar.navbar-default(role="navigation")
            .navbar-header
                button.navbar-toggle.collapsed(type="button", data-toggle="collapse", data-target="#navbar-inverse", aria-expanded="false", aria-controls="navbar")
                    span.sr-only Toggle navigation
                    span.icon-bar
                    span.icon-bar
                    span.icon-bar
                a.navbar-brand(href="#") Stream Donation Playlist
            #navbar-inverse.collapse.navbar-collapse
                ul.nav.navbar-nav
                    li.active: a(href="#") My Stream
                    li: a(href="moderatedStreams") Moderated Streams
                ul.nav.navbar-nav.pull-right
                    li.dropdown
                        a.dropdown-toggle(href="#", data-toggle="dropdown", role="button", aria-expanded="false") #{username}
                            span.caret
                        ul.dropdown-menu(role="menu")
                            li: a(href="#") Sign Out
                            //
                                li: a(href="#") Another action
                                li: a(href="#") Something else here
                                li.divider
                                li.dropdown-header Nav header
                                li: a(href="#") Separated link
                                li: a(href="#") One more separated link
        div.container(id="playlist-container")
            each song, index in playlist
                script.
                    positionFromIndex[#{index}] = #{index};
                    indexFromPosition[#{index}] = #{index};
                div.panel.panel-info(id="panel" + index.toString())
                    div.panel-heading
                        ul.list-inline(style="text-align: right; padding: 5px;")
                            li(style="float: left;")
                                h3.panel-title= "Song from " + song.donator
                            li(style="float: none; display: none;", id="hide-preview-button" + index.toString())
                                button.btn.btn-sm.btn-primary(onclick="hidePreviewAction(#{index})")
                                    span.glyphicon.glyphicon-collapse-down.pull-right
                    div.panel-body(style="padding: 5px")
                        div(style="display: none;", id="preview-panel" + index.toString())
                            div.row(style="padding: 2px 20px 2px 20px;")
                                div.col-md-7(style="padding: 0px;")
                                    div.embed-responsive.embed-responsive-16by9(style="margin-right: 10px;")
                                        iframe(src="https://www.youtube.com/embed/B2jVbSI9H4o" allowfullscreen)
                                div.col-md-5.well(style="padding: 10px 18px;")
                                    p: b $20.00 from: mEmel0rD420xd
                                    p "It was a hot and sultry night at the c9 gaming house. everyone was in bed except for meteos and sneaky. "we can't keep doing this, baby" says sneaky. "put that mouth to use, you dirty tramp" replies meteos. "LCS starts tmrw, and if you expect me to carry you again, i need to you to suck me to completion." sneaky grins sl*ttily, and goes to town"
                            hr
                        div.row
                            ul.list-inline(style="margin: 0px 10px 0px 10px; text-align: right;")
                                li(style="float: left;")
                                    button.btn.btn-success(onclick="previewAction(#{index})")
                                            span.glyphicon.glyphicon-play-circle
                                li(style="float: left;"): p= song.link
                                li(style="float: none; display: inline-block;")
                                    button.btn.btn-success(onclick="moveDownAction(#{index})")
                                        span.glyphicon.glyphicon-download
                                li(style="float: none; display: inline-block;")
                                    button.btn.btn-success(onclick="moveUpAction(#{index})")
                                        span.glyphicon.glyphicon-upload
                                li(style="float: none; display: inline-block;")
                                    button.btn.btn-danger(onclick="deleteAction(#{index})")
                                        span.glyphicon.glyphicon-minus-sign
                script.
                    if (#{index} == 1) {
                        previewAction(#{index});
                    }