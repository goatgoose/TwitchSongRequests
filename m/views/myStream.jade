//
   Created by goatgoose on 12/30/15.

html
    head
        title=title
        link(href="//maxcdn.bootstrapcdn.com/bootswatch/3.3.6/flatly/bootstrap.min.css", rel="stylesheet")
    body

        script(src="//ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js")
        script(src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js")
        script(src="https://www.youtube.com/iframe_api")

        script.
            var playlist = !{JSON.parse(JSON.stringify(playlistCache))};

            var currentPreview;

            var youtubePlayers = [];
            var currentlyPlayingIndex;
            var youtubeAPIIsReady = false;

            var positionFromIndex = {}; // index : position
            var indexFromPosition = {}; // position : index

            var switchPositions = function(baseIndex, offset) {
                var basePosition = positionFromIndex[baseIndex];
                var swapPosition = basePosition + offset;
                var swapIndex = indexFromPosition[swapPosition];

                var basePanel = $("#panel" + baseIndex);
                var swapPanel = $("#panel" + swapIndex);

                if (offset < 0) {
                    basePanel.insertBefore(swapPanel);
                } else {
                    swapPanel.insertBefore(basePanel);
                }

                // update new positions
                positionFromIndex[baseIndex] = swapPosition;
                positionFromIndex[swapIndex] = basePosition;
                indexFromPosition[basePosition] = swapIndex;
                indexFromPosition[swapPosition] = baseIndex;

                // console.log("positionFromIndex = " + JSON.stringify(positionFromIndex));
                // console.log("indexFromPosition = " + JSON.stringify(indexFromPosition));
            }

            var previewAction = function(index, playAutomatically) {
                if(typeof playAutomatically == "undefined") {
                    playAutomatically = false;
                }

                // hide preview at current index
                if (currentPreview != null) {
                    document.getElementById("hide-preview-button" + currentPreview.toString()).style.display = "none";
                    document.getElementById("preview-panel" + currentPreview.toString()).style.display = "none";
                }

                // show preview at new index
                document.getElementById("hide-preview-button" + index.toString()).style.display = "block";
                document.getElementById("preview-panel" + index.toString()).style.display = "block";

                currentPreview = index;

                if(getPlayer(index) == null) {
                    if (youtubeAPIIsReady) {
                        addPlayer(index, playAutomatically);
                    }
                }
            }

            var moveDownAction = function(index) {
                switchPositions(index, 1);

                updateButtons();
            }

            var moveUpAction = function(index) {
                switchPositions(index, -1);

                updateButtons();
            }

            var deleteAction = function(deleteIndex) {
                document.getElementById("panel" + deleteIndex.toString()).remove();

                var deletePosition = positionFromIndex[deleteIndex];

                var newPositionFromIndex = {}; // index : position   1:2, (2:3), 3:1, 4:4 - 1:2, 3:1, 4:3
                var newIndexFromPosition = {}; // position : index    1:3, 2:1, (3:2), 4:4 - 1:3, 2:1, 3:4

                var i = 0;
                for (position in indexFromPosition) {
                    if (position[0] != deletePosition) {
                        i = i + 1;
                        if (position < deletePosition) {
                            newPositionFromIndex[indexFromPosition[i]] = i;
                            newIndexFromPosition[i] = indexFromPosition[i];
                        } else {
                            newPositionFromIndex[indexFromPosition[i + 1]] = i;
                            newIndexFromPosition[i] = indexFromPosition[i + 1];
                        }
                    }
                }

                positionFromIndex = newPositionFromIndex;
                indexFromPosition = newIndexFromPosition;

                if(deleteIndex == currentPreview) {
                    currentPreview = null;
                }

                deletePlayer(deleteIndex);

                updateButtons();

                // console.log("positionFromIndex = " + JSON.stringify(positionFromIndex));
                // console.log("indexFromPosition = " + JSON.stringify(indexFromPosition));
            }

            var hidePreviewAction = function(index) {
                document.getElementById("hide-preview-button" + index.toString()).style.display = "none";
                document.getElementById("preview-panel" + index.toString()).style.display = "none";
                currentPreview = index;
            }

            var addCustomLinkAction = function() {
                $("#custom-link-container").show();
            }

            var addCustomLinkToPlaylistAction = function() {
                var link = $("#custom-link-textbox").val();
                var linkObj = {
                    "donator": "#{username}",
                    "link": link,
                    "amount": 0,
                    "message": ""
                }
                addLink(linkObj, Object.keys(indexFromPosition).length + 1);

                $("#custom-link-container").hide();
            }

            var updateButtons = function() {
                for(position in indexFromPosition) {
                    if(position == 1) {
                        document.getElementById("move-up-button" + indexFromPosition[position]).style.display = "none";
                        document.getElementById("move-down-button" + indexFromPosition[position]).style.display = "inline-block";
                    } else if(position == Object.keys(indexFromPosition).length) {
                        document.getElementById("move-up-button" + indexFromPosition[position]).style.display = "inline-block";
                        document.getElementById("move-down-button" + indexFromPosition[position]).style.display = "none";
                    } else {
                        document.getElementById("move-up-button" + indexFromPosition[position]).style.display = "inline-block";
                        document.getElementById("move-down-button" + indexFromPosition[position]).style.display = "inline-block";
                    }
                }
            }

            var addLink = function(song, index) {
                $("#playlist-container").append(
                        //language="HTML"
                        '<div class="panel panel-info" id="panel' + index.toString() + '">' +
                            '<div class="panel-heading">' +
                                '<ul class="list-inline" style="text-align: right; padding: 5px;">' +
                                    '<li style="float: left;">' +
                                        '<h3 class="panel-title">Song from ' + song.donator + '</h3>' +
                                    '</li>' +
                                    '<li style="float: none; display: none;" id="hide-preview-button' + index.toString() + '">' +
                                        '<button class="btn btn-sm btn-primary" onclick="hidePreviewAction(' + index + ')">' +
                                            '<span class="glyphicon glyphicon-collapse-down pull-right"></span>' +
                                        '</button>' +
                                    '</li>' +
                                '</ul>' +
                            '</div>' +
                            '<div class="panel-body" style="padding: 5px;">' +
                                '<div style="display: none;" id="preview-panel' + index.toString() + '">' +
                                    '<div class="row" style="padding: 2px 20px 2px 20px;">' +
                                        '<div class="col-md-7" style="padding: 0px;">' +
                                            '<div class="embed-responsive embed-responsive-16by9" style="margin-right: 10px;">' +
                                                '<div id="youtube-frame' + index.toString() + '"></div>' +
                                            '</div>' +
                                        '</div>' +
                                        '<div class="col-md-5 well" style="padding: 10px 18px;">' +
                                            '<p><b>$20.00 from: mEmel0rD420xd</b></p>' +
                                            '<p>"It was a hot and sultry night at the c9 gaming house. everyone was in bed except for meteos and sneaky. we cant keep doing this, baby says sneaky. put that mouth to use, you dirty tramp replies meteos. LCS starts tmrw, and if you expect me to carry you again, i need to you to suck me to completion. sneaky grins sl*ttily, and goes to town"</p>' +
                                        '</div>' +
                                    '</div>' +
                                    '<hr>' +
                                '</div>' +
                                '<div class="row">' +
                                    '<ul class="list-inline" style="margin: 0px 10px 0px 10px; text-align: right">' +
                                        '<li style="float: left;">' +
                                            '<button class="btn btn-success" onclick="previewAction(' + index + ')">' +
                                                '<span class="glyphicon glyphicon-play-circle"></span>' +
                                            '</button>' +
                                        '</li>' +
                                        '<li style="float: left;"><p>' + song.link + '</p></li>' +
                                        '<li style="float: none; display: inline-block">' +
                                            '<button id="move-down-button' + index.toString() + '" class="btn btn-success" onclick="moveDownAction(' + index + ')">' +
                                                '<span class="glyphicon glyphicon-download"></span>' +
                                            '</button>' +
                                        '</li>' +
                                        '<li style="float: none; display: inline-block">' +
                                            '<button id="move-up-button' + index.toString() + '"" class="btn btn-success" onclick="moveUpAction(' + index + ')">' +
                                                '<span class="glyphicon glyphicon-upload"></span>' +
                                            '</button>' +
                                        '</li>' +
                                        '<li style="float: none; display: inline-block">' +
                                            '<button class="btn btn-danger" onclick="deleteAction(' + index + ')">' +
                                                '<span class="glyphicon glyphicon-minus-sign"></span>' +
                                            '</button>' +
                                        '</li>' +
                                    '</ul>' +
                                '</div>' +
                            '</div>' +
                        '</div>');

                positionFromIndex[index] = index;
                indexFromPosition[index] = index;

                updateButtons();
            };

            // youtube player api

            function addPlayer(index, autoplay) {
                if(typeof autoplay == "undefined") {
                    autoplay = 0;
                } else if(autoplay == false) {
                    autoplay = 0;
                } else if(autoplay == true) {
                    autoplay = 1;
                }

                youtubePlayers.push(new YT.Player("youtube-frame" + index.toString(), {
                    videoId: "B2jVbSI9H4o",
                    playerVars: {
                        autoplay: autoplay
                    },
                    events: {
                        "onReady": onPlayerReady,
                        "onStateChange": onStateChange
                    }
                }));
            }

            function getPlayer(index) {
                for(var player in youtubePlayers) {
                    var panelId = youtubePlayers[player]["f"].id;
                    var id = parseInt(panelId.substring(13), 10);
                    if(id == index) {
                        return youtubePlayers[player];
                    }
                }
                return null;
            }

            function deletePlayer(index) {
                for(var player in youtubePlayers) {
                    var panelId = youtubePlayers[player]["f"].id;
                    var id = parseInt(panelId.substring(13), 10);
                    if (id == index) {
                        delete youtubePlayers[player];
                        if(currentlyPlayingIndex == index) {
                            currentlyPlayingIndex = null;
                        }
                        return;
                    }
                }
            }

            function parsePlayerId(embedCode) {
                return parseInt(embedCode.substring(25, embedCode.indexOf(" frameborder") - 1), 10);
            }

            function onYouTubeIframeAPIReady() {
                addPlayer(1);
                youtubeAPIIsReady = true;
            }

            function onPlayerReady(event) {

            }

            function onStateChange(event) {
                // YT.PlayerState.UNSTARTED
                // YT.PlayerState.ENDED
                // YT.PlayerState.PLAYING
                // YT.PlayerState.PAUSED
                // YT.PlayerState.BUFFERING
                // YT.PlayerState.CUED

                if(event.data == YT.PlayerState.ENDED) {
                    var nextPanelPosition = positionFromIndex[currentlyPlayingIndex] + 1
                    var nextPanelIndex = indexFromPosition[nextPanelPosition];
                    console.log(nextPanelIndex.toString());
                    deleteAction(currentlyPlayingIndex);
                    if(typeof nextPanelPosition != "undefined") {
                        previewAction(nextPanelIndex, true)
                    }
                }
                if(event.data == YT.PlayerState.PLAYING) { // TODO make more efficient by keeping track of the single video that is playing
                    var embedCode = event.target.getVideoEmbedCode();
                    var id = parsePlayerId(embedCode);

                    if(currentlyPlayingIndex != null) {
                        getPlayer(currentlyPlayingIndex).pauseVideo();
                    }

                    currentlyPlayingIndex = id;
                }
            }

        nav.navbar.navbar-default(role="navigation")
            .navbar-header
                button.navbar-toggle.collapsed(type="button", data-toggle="collapse", data-target="#navbar-inverse", aria-expanded="false", aria-controls="navbar")
                    span.sr-only Toggle navigation
                    span.icon-bar
                    span.icon-bar
                    span.icon-bar
                a.navbar-brand(href="#") Stream Donation Playlist
            #navbar-inverse.collapse.navbar-collapse
                ul.nav.navbar-nav
                    li.active: a(href="#") My Stream
                    li: a(href="moderatedStreams") Moderated Streams
                ul.nav.navbar-nav.pull-right
                    li.dropdown
                        a.dropdown-toggle(href="#", data-toggle="dropdown", role="button", aria-expanded="false") #{username}
                            span.caret
                        ul.dropdown-menu(role="menu")
                            li: a(href="#") Sign Out
        div.container
            div.panel.panel-default
                div.panel-body
                    ul.list-inline(style="text-align: right; margin: 0px;")
                        li(style="float: left;")
                            span.label.label-success Connected to client app
                        li(style="float: left;")
                            span.label.label-success Connected to stream
                        li(style="float: none; display: inline-block;")
                            button.btn.btn-sm.btn-warning(onclick="addCustomLinkAction()")
                                ul.list-inline
                                    li: span.glyphicon.glyphicon-plus
                                    li: p(style="margin: 0px;") Add Link
                        li(style="float: none; display: inline-block;")
                            button.btn.btn-sm.btn-info(onlick="showSettingsAction()")
                                ul.list-inline
                                    li: span.glyphicon.glyphicon-cog
                                    li: p(style="margin: 0px;") Settings
        div.container(id="custom-link-container", style="display: none; margin-bottom: 21px;")
            div.input-group
                input.form-control(id="custom-link-textbox", type="text", placeholder="YouTube Link")
                span.input-group-btn
                    button.btn.btn-success(type="button", onclick="addCustomLinkToPlaylistAction()") Add To Playlist
        div.container(id="playlist-container")
            script.
                var index = 0;
                for (var song in playlist) {
                    index = index + 1;

                    addLink(playlist[song], index);

                    if (index == 1) {
                        previewAction(index);
                    }
                }
